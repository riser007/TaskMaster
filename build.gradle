plugins {
    id 'org.springframework.boot' version '3.1.5' // Use a recent stable version
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
}

// Updated group ID
group = 'com.taskmaster'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17' // Use Java 17 or newer
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database Driver (PostgreSQL example)
    runtimeOnly 'org.postgresql:postgresql'
    // Or MySQL: runtimeOnly 'com.mysql:mysql-connector-j'
    // Or H2 (for testing/dev): runtimeOnly 'com.h2database:h2'

    // JWT Support
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Or jjwt-gson if you prefer Gson

    // Lombok (Reduce boilerplate code)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ModelMapper (Optional, for easy DTO mapping - add if needed)
    // implementation 'org.modelmapper:modelmapper:3.1.1'

    // Spring Boot DevTools (Optional, for development)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}